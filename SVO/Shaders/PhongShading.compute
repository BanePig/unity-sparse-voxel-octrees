#pragma kernel cs_main

RWTexture2D<float4> result_texture;
RWTexture2D<float4> diffuse_texture;
RWTexture2D<float3> position_texture;
RWTexture2D<float3> normal_texture;

float sun_shininess;
float3 sun_direction;
float3 sun_diffuse;
float3 sun_specular;

float3 ambient_light;

float3 cam_pos;

[numthreads(16,16,1)]
void cs_main(uint3 id : SV_DispatchThreadID)
{
    float3 normal = (normal_texture[id.xy] - float3(.5f, .5f, .5f)) * 2.f;
    float4 diffuse = diffuse_texture[id.xy];
    
    float3 ray_dir = normalize(position_texture[id.xy] - cam_pos);

    float3 effective_sun_diffuse = sun_diffuse * max(dot(-normal, sun_direction), 0);
    
    float3 sun_reflection = reflect(-sun_direction, normal);
    float spec_strength = max(dot(sun_reflection, ray_dir), 0.f);
    spec_strength = pow(spec_strength, sun_shininess);
    float3 effective_sun_specular = sun_specular * spec_strength;
    
    result_texture[id.xy] = float4(diffuse.xyz * (ambient_light + effective_sun_diffuse) + effective_sun_specular, diffuse.w);
    //result_texture[id.xy] = float4(ray_dir / 2.f + .5f, diffuse.w);
}